{"version":3,"file":"static/js/770.94cdcdde.chunk.js","mappings":"mPAEaA,EAAWC,EAAAA,GAAAA,GAAH,kIASRC,EAASD,EAAAA,GAAAA,IAAH,2JAONE,EAAUF,EAAAA,GAAAA,GAAH,yC,SCgBpB,EA7Ba,SAAAG,GACX,OAAwBC,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,IAJAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaH,GAASI,KAAKL,EAC5B,GAAE,CAACC,IAEAF,EACF,OACE,SAACN,EAAD,UACGM,EAAKO,KAAI,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,UAAWC,EAApB,EAAoBA,QAASC,EAA7B,EAA6BA,aAA7B,OACR,UAACd,EAAD,YACE,SAACD,EAAD,WACE,gBACEgB,IAAG,yCAAoCD,GACvCE,MAAM,QACNC,IAAI,QAGR,uBAAIN,KACJ,uBAAIC,MATQC,EADN,KAgBjB,C,+LC3BDK,EAAAA,EAAAA,SAAAA,QAHiB,gCAIjBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAJc,oCAOT,IAAMC,EAAiB,mCAAG,oGACRF,EAAAA,EAAAA,IAAU,uBADF,cACzBG,EADyB,yBAExBA,EAASC,KAAKC,SAFU,2CAAH,qDAKjBC,EAAc,mCAAG,WAAMC,GAAN,uFACLP,EAAAA,EAAAA,IAAA,8BAAiCO,IAD5B,cACtBJ,EADsB,yBAErBA,EAASC,KAAKC,SAFO,2CAAH,sDAKdG,EAAY,mCAAG,WAAMzB,GAAN,uFACHiB,EAAAA,EAAAA,IAAA,iBAAoBjB,IADjB,cACpBoB,EADoB,yBAEnBA,EAASC,MAFU,2CAAH,sDAKZd,EAAY,mCAAG,WAAMP,GAAN,uFACHiB,EAAAA,EAAAA,IAAA,iBAAoBjB,EAApB,aADG,cACpBoB,EADoB,yBAEnBA,EAASC,KAAKnB,MAFK,2CAAH,sDAKZwB,EAAe,mCAAG,WAAM1B,GAAN,uFACNiB,EAAAA,EAAAA,IAAA,iBAAoBjB,EAApB,aADM,cACvBoB,EADuB,yBAEtBA,EAASC,KAAKC,SAFQ,2CAAH,qD","sources":["components/Cast.styled.js","components/Cast.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastList = styled.ul`\ndisplay: flex;\ngap 20px;\n    flex-wrap: wrap;\n  list-style-type: none; \n  padding: 0; \n  margin: 0;\n`;\n\nexport const ImgBox = styled.div`\n  width: 100px;\n  height: 150px;\n  background-color: lightgray;\n  background-image: url('http://via.placeholder.com/100x150');\n`;\n\nexport const ItemBox = styled.li`\n  width: 170px;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getMovieCast } from '../services/api';\nimport { CastList, ImgBox, ItemBox } from './Cast.styled';\n\nconst Cast = id => {\n  const [cast, setCast] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMovieCast(movieId).then(setCast);\n  }, [movieId]);\n\n  if (cast) {\n    return (\n      <CastList>\n        {cast.map(({ name, character, cast_id, profile_path }) => (\n          <ItemBox key={cast_id}>\n            <ImgBox>\n              <img\n                src={`https://image.tmdb.org/t/p/w300${profile_path}`}\n                width=\"100px\"\n                alt=\"\"\n              />\n            </ImgBox>\n            <p>{name}</p>\n            <p>{character}</p>\n          </ItemBox>\n        ))}\n      </CastList>\n    );\n  }\n};\n\nexport default Cast;","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '50331c259a8d216f974a09fadb8f8a27';\n\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.params = {\n  api_key: API_KEY,\n};\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get('/trending/movie/day');\n  return response.data.results;\n};\n\nexport const getMovieByName = async query => {\n  const response = await axios.get(`/search/movie?query=${query}`);\n  return response.data.results;\n};\n\nexport const getMovieByID = async id => {\n  const response = await axios.get(`/movie/${id}`);\n  return response.data;\n};\n\nexport const getMovieCast = async id => {\n  const response = await axios.get(`/movie/${id}/credits`);\n  return response.data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(`/movie/${id}/reviews`);\n  return response.data.results;\n};\n"],"names":["CastList","styled","ImgBox","ItemBox","id","useState","cast","setCast","movieId","useParams","useEffect","getMovieCast","then","map","name","character","cast_id","profile_path","src","width","alt","axios","api_key","getTrendingMovies","response","data","results","getMovieByName","query","getMovieByID","getMovieReviews"],"sourceRoot":""}